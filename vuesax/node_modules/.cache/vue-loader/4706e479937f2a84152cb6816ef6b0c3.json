{"remainingRequest":"D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\src\\App.vue","mtime":1558692056000},{"path":"D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport themeConfig from '@/../themeConfig.js'\n\nexport default {\n  watch: {\n    '$store.state.theme'(val) {\n      this.toggleClassInBody(val);\n    }\n  },\n  async created() {\n    try {\n      await this.$auth.renewTokens();\n    } catch (e) {\n      console.log(e);\n    }\n  },\n  methods: {\n    toggleClassInBody(className) {\n      if (className == 'dark') {\n        if (document.body.className.match('theme-semi-dark')) document.body.classList.remove('theme-semi-dark');\n        document.body.classList.add('theme-dark');\n      } else if (className == 'semi-dark') {\n        if (document.body.className.match('theme-dark')) document.body.classList.remove('theme-dark');\n        document.body.classList.add('theme-semi-dark');\n      } else {\n        if (document.body.className.match('theme-dark')) document.body.classList.remove('theme-dark');\n        if (document.body.className.match('theme-semi-dark')) document.body.classList.remove('theme-semi-dark');\n      }\n    },\n    handleWindowResize(event) {\n      this.$store.dispatch('updateWindowWidth', event.currentTarget.innerWidth);\n    },\n  },\n  mounted() {\n    this.toggleClassInBody(themeConfig.theme)\n    this.$nextTick(() => {\n      window.addEventListener('resize', this.handleWindowResize);\n    });\n    this.$store.dispatch('updateWindowWidth', window.innerWidth);\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.handleWindowResize);\n  },\n}\n\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<!-- =========================================================================================\n\tFile Name: App.vue\n\tDescription: Main vue file - APP\n\t----------------------------------------------------------------------------------------\n\tItem Name: Vuesax Admin - VueJS Dashboard Admin Template\n\tAuthor: Pixinvent\n\tAuthor URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n\t<div id=\"app\">\n\t\t<router-view></router-view>\n\t</div>\n</template>\n\n<script>\nimport themeConfig from '@/../themeConfig.js'\n\nexport default {\n  watch: {\n    '$store.state.theme'(val) {\n      this.toggleClassInBody(val);\n    }\n  },\n  async created() {\n    try {\n      await this.$auth.renewTokens();\n    } catch (e) {\n      console.log(e);\n    }\n  },\n  methods: {\n    toggleClassInBody(className) {\n      if (className == 'dark') {\n        if (document.body.className.match('theme-semi-dark')) document.body.classList.remove('theme-semi-dark');\n        document.body.classList.add('theme-dark');\n      } else if (className == 'semi-dark') {\n        if (document.body.className.match('theme-dark')) document.body.classList.remove('theme-dark');\n        document.body.classList.add('theme-semi-dark');\n      } else {\n        if (document.body.className.match('theme-dark')) document.body.classList.remove('theme-dark');\n        if (document.body.className.match('theme-semi-dark')) document.body.classList.remove('theme-semi-dark');\n      }\n    },\n    handleWindowResize(event) {\n      this.$store.dispatch('updateWindowWidth', event.currentTarget.innerWidth);\n    },\n  },\n  mounted() {\n    this.toggleClassInBody(themeConfig.theme)\n    this.$nextTick(() => {\n      window.addEventListener('resize', this.handleWindowResize);\n    });\n    this.$store.dispatch('updateWindowWidth', window.innerWidth);\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.handleWindowResize);\n  },\n}\n\n</script>\n"]}]}
{"remainingRequest":"D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\src\\views\\apps\\email\\Email.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\src\\views\\apps\\email\\Email.vue","mtime":1558783700000},{"path":"D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\node_modules\\css-loader\\index.js","mtime":1571722426289},{"path":"D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"@/assets/scss/vuesax/apps/email.scss\";\n",{"version":3,"sources":["Email.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgRA","file":"Email.vue","sourceRoot":"src/views/apps/email","sourcesContent":["<!-- =========================================================================================\n    File Name: Email.vue\n    Description: Email Application (Inbox)\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n    <div id=\"email-app\" class=\"border border-solid d-theme-border-grey-light rounded relative overflow-hidden\">\n\n        <vs-sidebar class=\"items-no-padding\" parent=\"#email-app\" :click-not-close=\"clickNotClose\" :hidden-background=\"clickNotClose\" v-model=\"isEmailSidebarActive\">\n            <email-sidebar :emailTags=\"emailTags\" @closeSidebar=\"toggleEmailSidebar\" :mailFilter=\"mailFilter\"></email-sidebar>\n        </vs-sidebar>\n\n        <div :class=\"{'sidebar-spacer': clickNotClose}\" class=\"app-fixed-height border border-solid d-theme-border-grey-light border-r-0 border-t-0 border-b-0\">\n\n            <!-- SEARCH BAR -->\n            <div class=\"flex border items-center app-search-container\">\n                <feather-icon class=\"md:inline-flex lg:hidden ml-4 mr-4 cursor-pointer\" icon=\"MenuIcon\" @click.stop=\"toggleEmailSidebar(true)\"></feather-icon>\n                <vs-input icon=\"icon-search\" size=\"large\" icon-pack=\"feather\" placeholder=\"Search Mail\" v-model=\"searchQuery\" class=\"vs-input-no-border vs-input-no-shdow-focus w-full no-icon-border\" />\n            </div>\n\n            <!-- EMAIL ACTION BAR -->\n            <div class=\"email__actions flex flex-wrap justify-between p-4 border border-r-0 border-l-0 border-solid d-theme-border-grey-light\">\n                <div>\n                    <vs-checkbox v-model=\"selectAllCheckBox\" icon-pack=\"feather\" :icon=\"selectAllIcon\" class=\"select-all-chexkbox ml-0\">Select All</vs-checkbox>\n                </div>\n                <div class=\"flex\">\n\n                    <vs-dropdown vs-custom-content vs-trigger-click class=\"cursor-pointer\">\n\n                        <feather-icon icon=\"FolderIcon\" class=\"cursor-pointer\" svg-classes=\"h-6 w-6\"></feather-icon>\n\n                        <vs-dropdown-menu>\n                            <ul class=\"my-2\">\n                                <li class=\"px-4 mb-2 flex items-start cursor-pointer hover:text-primary\" @click=\"moveTo('inboxed')\" v-if=\"mailFilter != 'inbox'\">\n                                    <feather-icon icon=\"MailIcon\" svg-classes=\"h-5 w-5\" />\n                                    <span class=\"ml-3\">Inbox</span>\n                                </li>\n                                <li class=\"px-4 mb-2 flex items-start cursor-pointer hover:text-primary\" @click=\"moveTo('drafted')\" v-if=\"mailFilter != 'draft'\">\n                                    <feather-icon icon=\"Edit2Icon\" svg-classes=\"h-5 w-5\"></feather-icon>\n                                    <span class=\"ml-3\">Draft</span>\n                                </li>\n                                <li class=\"px-4 mb-2 flex items-start cursor-pointer hover:text-primary\" @click=\"moveTo('spam')\" v-if=\"mailFilter != 'spam'\">\n                                    <feather-icon icon=\"InfoIcon\" svg-classes=\"h-5 w-5\"></feather-icon>\n                                    <span class=\"ml-3\">Spam</span>\n                                </li>\n                                <li class=\"px-4 flex items-start cursor-pointer hover:text-primary\" @click=\"moveTo('trashed')\" v-if=\"mailFilter != 'trash'\">\n                                    <feather-icon icon=\"TrashIcon\" svg-classes=\"h-5 w-5\"></feather-icon>\n                                    <span class=\"ml-3\">Trash</span>\n                                </li>\n                            </ul>\n                        </vs-dropdown-menu>\n                    </vs-dropdown>\n\n                    <vs-dropdown vs-custom-content vs-trigger-click class=\"cursor-pointer\">\n\n                        <feather-icon icon=\"TagIcon\" class=\"cursor-pointer ml-5\" svg-classes=\"h-6 w-6\"></feather-icon>\n\n                        <vs-dropdown-menu >\n                                <ul>\n                                    <li v-for=\"(label, index) in emailTags\" :key=\"index\" class=\"px-2 py-1 cursor-pointer\" @click=\"addLabelToMails(label.value)\">\n                                        <div class=\"h-3 w-3 inline-block rounded-full mr-3\" :class=\"'bg-' + label.color\"></div>\n                                        <span>{{ label.text }}</span>\n                                    </li>\n                                </ul>\n                        </vs-dropdown-menu>\n                    </vs-dropdown>\n\n                    <feather-icon icon=\"MailIcon\" class=\"ml-5 cursor-pointer\" svg-classes=\"h-6 w-6\" @click=\"updateMarkUnread\"></feather-icon>\n\n                    <feather-icon icon=\"TrashIcon\" class=\"cursor-pointer ml-5\" svg-classes=\"h-6 w-6\" @click=\"moveTo('trashed')\"></feather-icon>\n                </div>\n            </div>\n\n            <!-- EMAILS LIST -->\n            <VuePerfectScrollbar class=\"email-content-scroll-area\" :settings=\"settings\" ref=\"mailListPS\">\n                <transition-group name=\"list-enter-up\" class=\"email__mails\" tag=\"ul\" appear>\n                    <li class=\"cursor-pointer email__mail-item\" v-for=\"(mail, index) in mails\" :key=\"String(mailFilter) + String(mail.id)\" @click.stop=\"updateOpenMail(mail.id)\" :style=\"{transitionDelay: (index * 0.1) + 's'}\">\n                        <mail-item :mail=\"mail\" :isMailOpen=\"isMailOpen(mail.id)\" :isSelected=\"isMailSelected(mail.id)\" @addToSelected=\"addToSelectedMails\" @removeSelected=\"removeSelectedMail\"></mail-item>\n                    </li>\n                </transition-group>\n            </VuePerfectScrollbar>\n        </div>\n\n        <!-- EMAIL VIEW SIDEBAR -->\n        <email-view\n            :emailTags = \"emailTags\"\n            :openMailId = \"openMailId\"\n            :isSidebarActive = \"isSidebarActive\"\n            @markUnread = \"updateSingleMarkUnread\"\n            @removeMail = \"removeOpenMail\"\n            @previousMail = \"previousMail\"\n            @nextMail = \"nextMail\"\n            @moveTo = \"moveCurrentTo\"\n            @closeSidebar = \"closeMailViewSidebar\">\n        </email-view>\n    </div>\n</template>\n\n<script>\nimport EmailSidebar from './EmailSidebar.vue'\nimport MailItem from './MailItem.vue'\nimport EmailView from './EmailView.vue'\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\n\nexport default{\n    data() {\n        return {\n            openMailId: null,\n            selectedMails: [],\n            isSidebarActive: false,\n            showThread: false,\n            clickNotClose: true,\n            isEmailSidebarActive: true,\n            windowWidth: window.innerWidth,\n            settings: {\n                maxScrollbarLength: 60,\n                wheelSpeed: 0.30,\n            },\n        }\n    },\n    watch: {\n        isSidebarActive(value) {\n            if(!value) this.showThread = false\n        },\n        mailFilter() {\n            this.selectedMails = [];\n            this.$refs.mailListPS.$el.scrollTop = 0;\n        }\n    },\n    computed: {\n        mailFilter() {\n            return this.$store.state.email.mail_filter;\n        },\n        emailTags() {\n            return this.$store.state.email.mailTags;\n        },\n        searchQuery: {\n            get() {\n                return this.$store.state.email.mailSearchQuery;\n            },\n            set(val) {\n                this.$store.dispatch('email/setMailSearchQuery', val);\n            }\n        },\n        selectAllCheckBox: {\n            get() {\n                return this.selectedMails.length;\n            },\n            set(value) {\n                if(value) this.selectedMails = this.mails.map(mail => mail.id)\n                else this.selectedMails = [];\n            }\n        },\n        mails() {\n            return this.$store.getters['email/filteredMails'];\n        },\n        isMailOpen() {\n            return (mailId) => mailId == this.openMailId;\n        },\n        selectAllIcon() {\n            if(this.selectedMails.length == this.mails.length) return 'icon-check'\n            else return 'icon-minus'\n        },\n        isMailSelected() {\n            return (mailId) => this.selectedMails.indexOf(mailId) == -1 ? false : true;\n        },\n    },\n    methods: {\n        updateOpenMail(mailId) {\n            this.openMailId = mailId;\n            const payload = {mails: [mailId], unread: false};\n            this.$store.dispatch('email/updateMailUnread', payload);\n            this.isSidebarActive = true;\n        },\n        addToSelectedMails(mailId) {\n            this.selectedMails.push(mailId)\n        },\n        removeSelectedMail(mailId) {\n            const mailIndex = this.selectedMails.indexOf(mailId);\n            if(mailIndex > -1) {\n                this.selectedMails.splice(mailIndex, 1)\n            }\n        },\n        moveTo(to) {\n            const payload = {mails: this.selectedMails, to: to}\n            this.$store.dispatch('email/moveMailsTo', payload)\n            this.selectedMails = [];\n        },\n        moveCurrentTo(to) {\n            this.selectedMails = [this.openMailId];\n            this.moveTo(to)\n        },\n        updateMarkUnread() {\n            const payload = {mails: this.selectedMails, unread: true}\n            this.$store.dispatch('email/updateMailUnread', payload)\n            this.selectedMails = [];\n        },\n        removeOpenMail() {\n            this.selectedMails = [this.openMailId];\n            this.moveTo('trashed');\n            this.isSidebarActive = false;\n        },\n        toggleIsStarred() {\n            const payload = {mailId: this.currentMail.id, value : !this.currentMail.isStarred}\n            this.$store.dispatch('email/toggleIsMailStarred', payload)\n        },\n        nextMail() {\n            const currentMailIndex = this.mails.findIndex((mail) => mail.id == this.openMailId)\n            if(this.mails[currentMailIndex + 1]) this.openMailId = this.mails[currentMailIndex + 1].id\n        },\n        previousMail() {\n            const currentMailIndex = this.mails.findIndex((mail) => mail.id == this.openMailId)\n            if(this.mails[currentMailIndex - 1]) this.openMailId = this.mails[currentMailIndex - 1].id\n        },\n        updateSingleMarkUnread() {\n            this.selectedMails = [this.openMailId];\n            this.updateMarkUnread();\n            this.isSidebarActive = false;\n        },\n        addLabelToMails(label) {\n            const payload = {mails: this.selectedMails, label: label}\n            this.$store.dispatch('email/addLabelToMails', payload);\n            this.selectedMails = [];\n        },\n        closeMailViewSidebar() {\n            this.isSidebarActive = false;\n        },\n        handleWindowResize(event) {\n            this.windowWidth = event.currentTarget.innerWidth;\n            this.setSidebarWidth();\n        },\n        setSidebarWidth() {\n            if(this.windowWidth < 992) {\n                this.isEmailSidebarActive = this.clickNotClose = false;\n            }else {\n                this.isEmailSidebarActive = this.clickNotClose = true;\n            }\n        },\n        toggleEmailSidebar(value = false) {\n            if(!value) {\n                this.closeMailViewSidebar()\n                if(this.clickNotClose) {\n                    return\n                }\n            }\n            this.isEmailSidebarActive = value;\n        },\n    },\n    components: {\n        MailItem,\n        EmailSidebar,\n        EmailView,\n        VuePerfectScrollbar\n    },\n    created() {\n        this.$nextTick(() => {\n            window.addEventListener('resize', this.handleWindowResize);\n        })\n        this.setSidebarWidth();\n    },\n    beforeDestroy: function () {\n        window.removeEventListener('resize', this.handleWindowResize)\n    },\n}\n</script>\n\n<style lang=\"scss\">\n@import \"@/assets/scss/vuesax/apps/email.scss\";\n</style>\n"]}]}
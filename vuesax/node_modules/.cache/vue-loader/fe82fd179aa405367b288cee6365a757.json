{"remainingRequest":"D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\src\\layouts\\components\\vx-sidebar\\VxSidebarItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\src\\layouts\\components\\vx-sidebar\\VxSidebarItem.vue","mtime":1558692056000},{"path":"D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    name: 'VxSidebarItem',\n    props: {\n        icon: {\n            default: \"\",\n            type: String\n        },\n        iconSmall: {\n            default: false,\n            type: Boolean,\n        },\n        iconPack: {\n            default: 'material-icons',\n            type: String\n        },\n        href: {\n            default: '#',\n            type: String\n        },\n        to: {\n            default: null,\n            type: String\n        },\n        index: {\n            default: null,\n            type: [String, Number]\n        },\n        featherIcon: {\n            default: true,\n            type: Boolean,\n        },\n        target: {\n            default: '_self',\n            type: String,\n        },\n        isDisabled: {\n            default: false,\n            type: Boolean\n        }\n    },\n    data() {\n        return {\n            activeLink: false,\n        }\n    },\n    watch: {\n        '$route'() {\n            this.CheckIsActive()\n        }\n    },\n    methods: {\n        CheckIsActive() {\n            if (this.to) {\n                if(this.to == this.$router.path && this.to) this.activeLink = true\n                else this.activeLink = false\n                // if (this.$route.path.slice(1).includes(this.to.slice(1)) && this.to.slice(1)) this.activeLink = true\n                // else this.activeLink = false\n            }\n        }\n    },\n    computed: {\n        canSee() {\n            this.$acl.check(this.$store.state.userRole);\n            if(this.to) {\n                return this.$acl.check(this.$router.match(this.to).meta.rule)\n            }\n            return true\n        }\n    },\n    updated() {\n        this.CheckIsActive();\n    }\n}\n",{"version":3,"sources":["VxSidebarItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VxSidebarItem.vue","sourceRoot":"src/layouts/components/vx-sidebar","sourcesContent":["<!-- =========================================================================================\n    File Name: VxSidebarItem.vue\n    Description: Sidebar item component. Extends vuesax framework's 'vs-sidebar-item' component\n    Component Name: VxSidebarItem\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n<template>\n    <div :class=\"[{'vs-sidebar-item-active':activeLink}, {'disabled-item pointer-events-none': isDisabled}]\" class=\"vs-sidebar--item\" v-if=\"canSee\">\n        <router-link v-if=\"to\" :to=\"to\" :class=\"[{'router-link-active': activeLink}]\" :target=\"target\" exact>\n            <vs-icon v-if=\"!featherIcon\" :icon-pack=\"iconPack\" :icon=\"icon\">\n            </vs-icon>\n            <feather-icon :icon=\"icon\" :class=\"{'w-3 h-3': iconSmall}\" v-else></feather-icon>\n            <slot></slot>\n        </router-link>\n        <a v-else :target=\"target\" :href=\"href\">\n            <vs-icon v-if=\"!featherIcon\" :icon-pack=\"iconPack\" :icon=\"icon\">\n            </vs-icon>\n            <feather-icon :icon=\"icon\" :class=\"{'w-3 h-3': iconSmall}\" v-else></feather-icon>\n            <slot></slot>\n        </a>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'VxSidebarItem',\n    props: {\n        icon: {\n            default: \"\",\n            type: String\n        },\n        iconSmall: {\n            default: false,\n            type: Boolean,\n        },\n        iconPack: {\n            default: 'material-icons',\n            type: String\n        },\n        href: {\n            default: '#',\n            type: String\n        },\n        to: {\n            default: null,\n            type: String\n        },\n        index: {\n            default: null,\n            type: [String, Number]\n        },\n        featherIcon: {\n            default: true,\n            type: Boolean,\n        },\n        target: {\n            default: '_self',\n            type: String,\n        },\n        isDisabled: {\n            default: false,\n            type: Boolean\n        }\n    },\n    data() {\n        return {\n            activeLink: false,\n        }\n    },\n    watch: {\n        '$route'() {\n            this.CheckIsActive()\n        }\n    },\n    methods: {\n        CheckIsActive() {\n            if (this.to) {\n                if(this.to == this.$router.path && this.to) this.activeLink = true\n                else this.activeLink = false\n                // if (this.$route.path.slice(1).includes(this.to.slice(1)) && this.to.slice(1)) this.activeLink = true\n                // else this.activeLink = false\n            }\n        }\n    },\n    computed: {\n        canSee() {\n            this.$acl.check(this.$store.state.userRole);\n            if(this.to) {\n                return this.$acl.check(this.$router.match(this.to).meta.rule)\n            }\n            return true\n        }\n    },\n    updated() {\n        this.CheckIsActive();\n    }\n}\n</script>\n"]}]}
{"remainingRequest":"D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\src\\views\\apps\\calendar\\FullCalendar.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\src\\views\\apps\\calendar\\FullCalendar.vue","mtime":1558429964000},{"path":"D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\xampp\\htdocs\\coba_vuecli\\vuesax\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Datepicker from 'vuejs-datepicker';\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\n\nexport default {\n    data() {\n        return {\n            title: '',\n            start: '',\n            end: '',\n            desc: '',\n            id: 0,\n            disabledFrom: false,\n            labelLocal: 'none',\n            settings: {\n                maxScrollbarLength: 60,\n                wheelSpeed: 0.30,\n            },\n            activePromptAddEvent: false,\n            activePromptEditEvent: false,\n        }\n    },\n    computed: {\n        calendarEvents() {\n            return this.$store.state.calendar.calendarEvents\n        },\n        validForm() {\n            return this.title != '' && this.start != '' && this.end != '' && (Date.parse(this.end) - Date.parse(this.start)) >= 0;\n        },\n        disabledDatesTo() {\n            return { to: new Date(this.start) }\n        },\n        disabledDatesFrom() {\n            return { from: new Date(this.end) }\n        },\n        calendarLabels() {\n            return this.$store.state.calendar.calendarLabels\n        },\n        labelColor() {\n            return (label) => {\n                if (label == \"business\") return \"success\"\n                else if (label == \"work\") return \"warning\"\n                if (label == \"personal\") return \"danger\"\n                if (label == \"none\") return \"primary\"\n            }\n        },\n    },\n    methods: {\n        addEvent() {\n            const obj = { title: this.title, start: this.start, end: this.end, label: this.labelLocal, desc: this.desc }\n            obj.cssClass = \"event-\" + this.labelColor(this.labelLocal)\n            this.$store.dispatch('calendar/addEventToCalendar', obj);\n        },\n        clearFields() {\n            this.title = this.end = this.desc = \"\";\n            this.id = 0;\n            this.labelLocal = \"none\";\n        },\n        addNewEventDialog(date) {\n            this.clearFields();\n            this.start = date;\n            this.end = date;\n            this.activePromptAddEvent = true;\n        },\n        openAddNewEvent(date) {\n            this.disabledFrom = true;\n            this.addNewEventDialog(date);\n        },\n        promptAddNewEvent(date) {\n            this.disabledFrom = false;\n            this.addNewEventDialog(date);\n        },\n        openEditEvent(event) {\n            const e = this.$store.getters['calendar/eventById'](event.id)\n            this.id = e.id\n            this.title = e.title\n            this.start = e.start\n            this.end = e.end\n            this.desc = e.desc\n            this.activePromptEditEvent = true;\n        },\n        editEvent() {\n            const obj = { id: this.id, title: this.title, start: this.start, end: this.end, label: this.labelLocal, desc: this.desc }\n            obj.cssClass = \"event-\" + this.labelColor(this.labelLocal)\n            this.$store.dispatch('calendar/ediCalendarEvent', obj)\n        },\n        removeEvent() {\n            this.$store.dispatch('calendar/removeCalendarEvent', this.id)\n        },\n    },\n    components: {\n        'full-calendar': require('vue-fullcalendar'),\n        Datepicker,\n        VuePerfectScrollbar\n    }\n}\n",{"version":3,"sources":["FullCalendar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FullCalendar.vue","sourceRoot":"src/views/apps/calendar","sourcesContent":["<!-- =========================================================================================\n    File Name: Calendar.vue\n    Description: Calendar App\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n  <div id=\"calendar-app\">\n\n    <div class=\"vx-card app-fixed-height\">\n        <VuePerfectScrollbar class=\"scroll-area\" :settings=\"settings\">\n        <full-calendar class=\"w-full select-none\" :events=\"calendarEvents\" locale=\"en\" @dayClick =\"openAddNewEvent\" @eventClick=\"openEditEvent\">\n\n            <!-- HEADER LEFT -->\n            <div slot=\"fc-header-left\" class=\"flex flex-wrap sm:justify-start justify-center\">\n                <div v-for=\"(label, index) in calendarLabels\" :key=\"index\" class=\"flex items-center mr-4 mb-2\">\n                    <div class=\"h-3 w-3 inline-block rounded-full mr-2\" :class=\"'bg-' + label.color\"></div>\n                    <span>{{ label.text }}</span>\n                </div>\n                <div class=\"flex items-center mr-4 mb-2\">\n                    <div class=\"h-3 w-3 inline-block rounded-full mr-2 bg-primary\"></div>\n                    <span>None</span>\n                </div>\n            </div>\n\n            <!-- HEADER RIGHT -->\n            <div slot=\"fc-header-right\" class=\"flex justify-end\">\n                <vs-button icon-pack=\"feather\" icon=\"icon-plus\" @click=\"promptAddNewEvent(new Date())\">Add</vs-button>\n            </div>\n\n        </full-calendar>\n        </VuePerfectScrollbar>\n\n        <!-- ADD EVENT -->\n        <vs-prompt\n            class=\"calendar-event-dialog\"\n            vs-title=\"Add Event\"\n            vs-accept-text= \"Add Event\"\n            @vs-accept=\"addEvent\"\n            :vs-is-valid=\"validForm\"\n            :vs-active.sync=\"activePromptAddEvent\">\n\n            <div class=\"calendar__label-container flex\">\n\n                <vs-chip v-if=\"labelLocal != 'none'\" class=\"text-white\" :class=\"'bg-' + labelColor(labelLocal)\">{{ labelLocal }}</vs-chip>\n\n                <vs-dropdown vs-custom-content vs-trigger-click class=\"ml-auto my-2 cursor-pointer\">\n\n                    <feather-icon icon=\"TagIcon\" svgClasses=\"h-5 w-5\" class=\"cursor-pointer\" @click.prevent></feather-icon>\n\n                    <vs-dropdown-menu style=\"z-index: 200001\">\n                            <vs-dropdown-item v-for=\"(label, index) in calendarLabels\" :key=\"index\" @click=\"labelLocal = label.value\">\n                                <div class=\"h-3 w-3 inline-block rounded-full mr-2\" :class=\"'bg-' + label.color\"></div>\n                                <span>{{ label.text }}</span>\n                            </vs-dropdown-item>\n\n                            <vs-dropdown-item @click=\"labelLocal = 'none'\">\n                                <div class=\"h-3 w-3 mr-1 inline-block rounded-full mr-2 bg-primary\"></div>\n                                <span>None</span>\n                            </vs-dropdown-item>\n                    </vs-dropdown-menu>\n                </vs-dropdown>\n\n            </div>\n\n            <vs-input name=\"event-name\" v-validate=\"'required'\" class=\"w-full\" label-placeholder=\"Event Title\" v-model=\"title\"></vs-input>\n                <div class=\"my-4\">\n                    <small class=\"date-label\">Start Date</small>\n                    <datepicker name=\"start-date\" v-model=\"start\" :disabled=\"disabledFrom\"></datepicker>\n                </div>\n                <div class=\"my-4\">\n                    <small class=\"date-label\">End Date</small>\n                    <datepicker :disabledDates=\"disabledDatesTo\" name=\"end-date\" v-model=\"end\"></datepicker>\n                </div>\n            <vs-textarea rows=\"5\" label=\"Add description\" v-model=\"desc\" />\n\n        </vs-prompt>\n\n        <!-- EDIT EVENT -->\n        <vs-prompt\n            class=\"calendar-event-dialog\"\n            vs-title=\"Edit Event\"\n            vs-accept-text= \"Submit\"\n            vs-cancel-text = \"Remove\"\n            vs-button-cancel = \"border\"\n            @vs-cancel=\"removeEvent\"\n            @vs-accept=\"editEvent\"\n            :vs-is-valid=\"validForm\"\n            :vs-active.sync=\"activePromptEditEvent\">\n\n            <div class=\"calendar__label-container flex\">\n\n                <vs-chip v-if=\"labelLocal != 'none'\" class=\"text-white\" :class=\"'bg-' + labelColor(labelLocal)\">{{ labelLocal }}</vs-chip>\n\n                <vs-dropdown vs-custom-content class=\"ml-auto my-2 cursor-pointer\">\n\n                    <feather-icon icon=\"TagIcon\" svgClasses=\"h-5 w-5\" @click.prevent></feather-icon>\n\n                    <vs-dropdown-menu style=\"z-index: 200001\">\n                            <vs-dropdown-item v-for=\"(label, index) in calendarLabels\" :key=\"index\" @click=\"labelLocal = label.value\">\n                                <div class=\"h-3 w-3 inline-block rounded-full mr-2\" :class=\"'bg-' + label.color\"></div>\n                                <span>{{ label.text }}</span>\n                            </vs-dropdown-item>\n\n                            <vs-dropdown-item @click=\"labelLocal = 'none'\">\n                                <div class=\"h-3 w-3 mr-1 inline-block rounded-full mr-2 bg-primary\"></div>\n                                <span>None</span>\n                            </vs-dropdown-item>\n                    </vs-dropdown-menu>\n                </vs-dropdown>\n\n            </div>\n\n            <vs-input name=\"event-name\" v-validate=\"'required'\" class=\"w-full\" label-placeholder=\"Event Title\" v-model=\"title\"></vs-input>\n                <div class=\"my-4\">\n                    <small class=\"date-label\">Start Date</small>\n                    <datepicker :disabledDates=\"disabledDatesFrom\" name=\"start-date\" v-model=\"start\"></datepicker>\n                </div>\n                <div class=\"my-4\">\n                    <small class=\"date-label\">End Date</small>\n                    <datepicker :disabledDates=\"disabledDatesTo\" name=\"end-date\" v-model=\"end\"></datepicker>\n                </div>\n            <vs-textarea rows=\"5\" label=\"Add description\" v-model=\"desc\" />\n\n        </vs-prompt>\n    </div>\n\n\n\n  </div>\n</template>\n\n<script>\nimport Datepicker from 'vuejs-datepicker';\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\n\nexport default {\n    data() {\n        return {\n            title: '',\n            start: '',\n            end: '',\n            desc: '',\n            id: 0,\n            disabledFrom: false,\n            labelLocal: 'none',\n            settings: {\n                maxScrollbarLength: 60,\n                wheelSpeed: 0.30,\n            },\n            activePromptAddEvent: false,\n            activePromptEditEvent: false,\n        }\n    },\n    computed: {\n        calendarEvents() {\n            return this.$store.state.calendar.calendarEvents\n        },\n        validForm() {\n            return this.title != '' && this.start != '' && this.end != '' && (Date.parse(this.end) - Date.parse(this.start)) >= 0;\n        },\n        disabledDatesTo() {\n            return { to: new Date(this.start) }\n        },\n        disabledDatesFrom() {\n            return { from: new Date(this.end) }\n        },\n        calendarLabels() {\n            return this.$store.state.calendar.calendarLabels\n        },\n        labelColor() {\n            return (label) => {\n                if (label == \"business\") return \"success\"\n                else if (label == \"work\") return \"warning\"\n                if (label == \"personal\") return \"danger\"\n                if (label == \"none\") return \"primary\"\n            }\n        },\n    },\n    methods: {\n        addEvent() {\n            const obj = { title: this.title, start: this.start, end: this.end, label: this.labelLocal, desc: this.desc }\n            obj.cssClass = \"event-\" + this.labelColor(this.labelLocal)\n            this.$store.dispatch('calendar/addEventToCalendar', obj);\n        },\n        clearFields() {\n            this.title = this.end = this.desc = \"\";\n            this.id = 0;\n            this.labelLocal = \"none\";\n        },\n        addNewEventDialog(date) {\n            this.clearFields();\n            this.start = date;\n            this.end = date;\n            this.activePromptAddEvent = true;\n        },\n        openAddNewEvent(date) {\n            this.disabledFrom = true;\n            this.addNewEventDialog(date);\n        },\n        promptAddNewEvent(date) {\n            this.disabledFrom = false;\n            this.addNewEventDialog(date);\n        },\n        openEditEvent(event) {\n            const e = this.$store.getters['calendar/eventById'](event.id)\n            this.id = e.id\n            this.title = e.title\n            this.start = e.start\n            this.end = e.end\n            this.desc = e.desc\n            this.activePromptEditEvent = true;\n        },\n        editEvent() {\n            const obj = { id: this.id, title: this.title, start: this.start, end: this.end, label: this.labelLocal, desc: this.desc }\n            obj.cssClass = \"event-\" + this.labelColor(this.labelLocal)\n            this.$store.dispatch('calendar/ediCalendarEvent', obj)\n        },\n        removeEvent() {\n            this.$store.dispatch('calendar/removeCalendarEvent', this.id)\n        },\n    },\n    components: {\n        'full-calendar': require('vue-fullcalendar'),\n        Datepicker,\n        VuePerfectScrollbar\n    }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"@/assets/scss/vuesax/apps/calendar.scss\";\n</style>\n"]}]}